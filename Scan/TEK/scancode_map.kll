Name = TEK;
Version = 1337;
Author = "Streetwalrus";
KLL = 0.3c;

# Modified Date
Date = 2015-10-06;

enableMouse = 0;
enableJoystick = 0;

#flashModeEnabled = 1;

S0x63 : U"Esc";
S0x55 : U"Esc"; # Right space bar
S0x4D : U"Space";
S0x6C : U"1";
S0x6F : U"2";
S0x77 : U"3";
S0x1F : U"4";
S0x1D : U"5";
S0x17 : U"6";
S0x15 : U"7";
S0x75 : U"8";
S0x0C : U"9";
S0x24 : U"0";
S0x0E : U"Minus";
S0x7C : U"Equal";
S0x7A : U"Backslash";
S0x31 : U"Backtick";
S0x33 : U"App";
S0x6E : U"Tab";
S0x36 : U"Delete";
S0x6B : U"Q";
S0x62 : U"W";
S0x76 : U"E";
S0x1C : U"R";
S0x1E : U"T";
S0x14 : U"Y";
S0x16 : U"U";
S0x74 : U"I";
S0x0B : U"O";
S0x21 : U"P";
S0x0A : U"LBracket";
S0x7B : U"RBracket";
S0x79 : U"Backspace";
S0x53 : U"LCtrl";
S0x51 : U"RCtrl";
S0x6A : U"A";
S0x60 : U"S";
S0x72 : U"D";
S0x1B : U"F";
S0x1A : U"G";
S0x13 : U"H";
S0x12 : U"J";
S0x73 : U"K";
S0x08 : U"L";
S0x23 : U"Semicolon";
S0x22 : U"Quote";
S0x7E : U"Enter";
S0x43 : U"LShift";
S0x69 : U"Z";
S0x61 : U"X";
S0x70 : U"C";
S0x18 : U"V";
S0x19 : U"B";
S0x10 : U"N";
S0x11 : U"M";
S0x71 : U"Comma";
S0x09 : U"Period";
S0x20 : U"Slash";
S0x41 : U"RShift";
S0x3A : U"LAlt";
S0x5B : U"LGui"; # Left blank
S0x6D : U"LGui"; # Middle symbol
S0x52 : U"RGui";  # Right blank
S0x38 : U"RAlt";
S0x4C : U"Up";
S0x26 : U"Down";
S0x78 : U"Left";
S0x4F : U"Right";
S0x64 : U"PageUp";
S0x66 : U"PageDown";
S0x2C : U"Home";
S0x2E : U"End";
S0x67 : U"F1";
S0x65 : U"F2";
S0x07 : U"F3";
S0x05 : U"F4";
S0x7F : U"F5";
S0x7D : U"F6";
S0x0F : U"F7";
S0x0D : U"F8";
S0x27 : U"F9";
S0x25 : U"F10";
S0x2F : U"F11";
S0x2D : U"F12";
S0x06 : CONS"Eject";
S0x56 : U"Insert";
S0x3D : U"PrintScreen";
S0x5C : layerShift(1); # Fn

S0x58 : layerShift(3); # NumLock LED
S0x59 : None; # CapsLock LED
#S0xF2 : layerShift(1); # ScrollLock LED

# Custom Action Examples

# Example capability, prints to cli
#action1 => CustomAction_action1_capability(); # No arguments

# Blocks given USB Code, must be used with blockLink
# Simple example, supports only blocking a single key at a time
# Keys must be specified using numbers see Macro/PartialMap/usb_hid.h
#blockHold => CustomAction_blockHold_capability( usbCode : 1 ); # Single 8-bit argument
#blockKey => CustomAction_blockKey_capability( usbCode : 1 );

gameLayer => CustomAction_gameLayer_capability();

